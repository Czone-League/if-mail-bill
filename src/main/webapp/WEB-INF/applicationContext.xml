<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.directwebremoting.org/schema/spring-dwr http://www.directwebremoting.org/schema/spring-dwr-3.0.xsd
			http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<description>Spring公共配置文件 </description>

	<!-- 定义受环境影响易变的变量 -->
	<context:property-placeholder location="file:${user.dir}/conf/*.properties" />
	
	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
	<context:component-scan base-package="net.umpay.mailbill" />
	
	<!-- dataSource -->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="5" />
		<property name="initialPoolSize" value="10" />
		<property name="minPoolSize" value="10" />
		<property name="maxPoolSize" value="50" />
		<!--maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0  -->
		<property name="maxStatementsPerConnection" value="50" />
		<!--因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的
 			 时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable
 			 等方法来提升连接测试的性能。Default: false -->
		<property name="testConnectionOnCheckout" value="true" />
		<!--如果设为true那么在取得连接的同时将校验连接的有效性。Default: false -->
        <property name="testConnectionOnCheckin" value="true" />
 		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
 		<property name="idleConnectionTestPeriod" value="60"/>
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.generate_statistics">true</prop>
				<prop key="hibernate.jdbc.fetch_size">50</prop>
				<prop key="hibernate.jdbc.batch_size">5</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<!-- <prop key="hibernate.cache.provider_configuration_file_resource_path">${hibernate.ehcache_config_file}</prop> -->
				<prop key="hibernate.cache.use_query_cache">false</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>net.umpay.mailbill.hql.model</value>
			</list>
		</property>
		<property name="lobHandler">
			<ref bean="oracleLobHandler" />
		</property>
	</bean>

	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!-- 使用aspectj表达式的注解 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 操作oracle的大数据对象类型 -->
	<bean id="nativeJdbcExtractor"
		class="org.springframework.jdbc.support.nativejdbc.SimpleNativeJdbcExtractor" />
	<bean id="oracleLobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler"
		lazy-init="true">
		<property name="nativeJdbcExtractor">
			<ref bean="nativeJdbcExtractor" />
		</property>
	</bean>
	
	<!-- jackson -->
	<bean id="objectMapper" class="org.codehaus.jackson.map.ObjectMapper"/>
	<!-- 配置线程池 -->  
	<bean id ="taskExecutor"  class ="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" >  
	    <!-- 线程池维护线程的最少数量 -->  
		<property name ="corePoolSize" value ="${taskExecutor.corePoolSize}" />  
	    <!-- 线程池维护线程所允许的空闲时间 -->  
		<property name ="keepAliveSeconds" value ="${taskExecutor.keepAliveSeconds}" />  
	    <!-- 线程池维护线程的最大数量 --> 
		<property name ="maxPoolSize" value ="${taskExecutor.maxPoolSize}" />  
	    <!-- 线程池所使用的缓冲队列 -->  
		<property name ="queueCapacity" value ="${taskExecutor.queueCapacity}" />  
	</bean>  
	
	<!-- 注入service	begin -->
	<bean id="boCommBankService" class="net.umpay.mailbill.service.impl.banktemplate.BoCommBank"/>
	<bean id="ccbService" class="net.umpay.mailbill.service.impl.banktemplate.CcbBank"/>
	<bean id="cebService" class="net.umpay.mailbill.service.impl.banktemplate.CebBank"/>
	<bean id="cgbService" class="net.umpay.mailbill.service.impl.banktemplate.CgbBank"/>
	<bean id="chinaService" class="net.umpay.mailbill.service.impl.banktemplate.ChinaBank"/>
	<bean id="cibService" class="net.umpay.mailbill.service.impl.banktemplate.CibBank"/>
	<bean id="citicService" class="net.umpay.mailbill.service.impl.banktemplate.CiticBank"/>
	<bean id="cmbService" class="net.umpay.mailbill.service.impl.banktemplate.CmbBank"/>
	<bean id="cmsbService" class="net.umpay.mailbill.service.impl.banktemplate.CMSBBlank"/>
	<bean id="huaxiaService" class="net.umpay.mailbill.service.impl.banktemplate.HuaxiaBank"/>
	<bean id="icbcService" class="net.umpay.mailbill.service.impl.banktemplate.IcbcBank"/>
	<bean id="pinganService" class="net.umpay.mailbill.service.impl.banktemplate.PingAnBank"/>
	<bean id="spdService" class="net.umpay.mailbill.service.impl.banktemplate.SpdBank"/>
	<bean id="agriculturalService" class="net.umpay.mailbill.service.impl.banktemplate.AgriculturalBank"/>
	<bean id="beiJingService" class="net.umpay.mailbill.service.impl.banktemplate.BeiJingBank"/>
	
	<bean id="parseMailService" class="net.umpay.mailbill.service.impl.banktemplate.ParseMailService"> 
		<property name="bankTemplateServicesList">
			<list>
				<ref bean="boCommBankService"/>
				<ref bean="ccbService"/>
				<ref bean="cebService"/>
				<ref bean="cgbService"/>
				<ref bean="chinaService"/>
				<ref bean="cibService"/>
				<ref bean="citicService"/>
				<ref bean="cmbService"/>
				<ref bean="cmsbService"/>
				<ref bean="huaxiaService"/>
				<ref bean="icbcService"/>
				<ref bean="pinganService"/>
				<ref bean="spdService"/>
				<ref bean="agriculturalService"/>
				<ref bean="beiJingService"/>
			</list>
		</property>
	</bean>
	<bean id="readMailHtml" class="net.umpay.mailbill.service.impl.banktemplate.ReadMailHtml"> 
		<property name="bankTemplateServicesList">
			<list>
				<ref bean="boCommBankService"/>
				<ref bean="ccbService"/>
				<ref bean="cebService"/>
				<ref bean="cgbService"/>
				<ref bean="chinaService"/>
				<ref bean="cibService"/>
				<ref bean="citicService"/>
				<ref bean="cmbService"/>
				<ref bean="cmsbService"/>
				<ref bean="huaxiaService"/>
				<ref bean="icbcService"/>
				<ref bean="pinganService"/>
				<ref bean="spdService"/>
				<ref bean="agriculturalService"/>
				<ref bean="beiJingService"/>
			</list>
		</property>
	</bean>
	<!-- 注入service	end -->
	<!-- 转换类Vo的注入 begin -->
	<bean id="cmbDayConvert" class="net.umpay.mailbill.service.impl.resolve.CmbDayConvertImpl"/>
	<bean id="cmbOldConvert" class="net.umpay.mailbill.service.impl.resolve.CmbOldConvertImpl"/>
	<bean id="cmbConvert" class="net.umpay.mailbill.service.impl.resolve.CmbConvertImpl"/>
	<bean id="cmbNewConvert" class="net.umpay.mailbill.service.impl.resolve.CmbNewConvertImpl"/>
	<bean id="cmbMonthlyConvert" class="net.umpay.mailbill.service.impl.resolve.CmbMonthlyConvertImpl"/>
	<bean id="ccbConvert" class="net.umpay.mailbill.service.impl.resolve.CcbConvertImpl"/>
	<bean id="bocommVisaConvert" class="net.umpay.mailbill.service.impl.resolve.BocommVisaConvertImpl"/>
	<bean id="bocommUnionpayConvert" class="net.umpay.mailbill.service.impl.resolve.BocommUnionpayConvertImpl"/>
	<bean id="icbcConvert" class="net.umpay.mailbill.service.impl.resolve.IcbcConvertImpl"/>
	<bean id="cgbConvert" class="net.umpay.mailbill.service.impl.resolve.CgbConvertImpl"/>
	<bean id="cmsbConvert" class="net.umpay.mailbill.service.impl.resolve.CmsbConvertImpl"/>
	<bean id="chinaConvert" class="net.umpay.mailbill.service.impl.resolve.ChinaConvertImpl"/>
	<bean id="agriculturalConvert" class="net.umpay.mailbill.service.impl.resolve.AgriculturalConvertImpl"/>
	<bean id="huaXiaConvert" class="net.umpay.mailbill.service.impl.resolve.HuaXiaConvertImpl"/>
	<bean id="cebConvert" class="net.umpay.mailbill.service.impl.resolve.CebConvertImpl"/>
	<bean id="cibConvert" class="net.umpay.mailbill.service.impl.resolve.CibConvertImpl"/>
	<bean id="citicConvert" class="net.umpay.mailbill.service.impl.resolve.CiticConvertImpl"/>
	<bean id="pingAnConvert" class="net.umpay.mailbill.service.impl.resolve.PingAnConvertImpl"/>
	<bean id="spdConvert" class="net.umpay.mailbill.service.impl.resolve.SpdConvertImpl"/>
	<bean id="beiJingConvert" class="net.umpay.mailbill.service.impl.resolve.BeiJingConvertImpl"/>
	<bean id="bocommMasterCardConvert" class="net.umpay.mailbill.service.impl.resolve.BocommMasterCardConvertImpl"></bean>
	
	<bean id="findVoService" class="net.umpay.mailbill.service.impl.resolve.FindVoServiceImpl"> 
		<property name="billTypeList">
			<list>
				<ref bean="cmbDayConvert"/>
				<ref bean="cmbOldConvert"/>
				<ref bean="cmbNewConvert"/>
				<ref bean="cmbMonthlyConvert"/>
				<ref bean="cmbConvert"/>
				<ref bean="ccbConvert"/>
				<ref bean="bocommVisaConvert"/>
				<ref bean="bocommUnionpayConvert"/>
				<ref bean="icbcConvert"/>
				<ref bean="cgbConvert"/>
				<ref bean="cmsbConvert"/>
				<ref bean="chinaConvert"/>
				<ref bean="agriculturalConvert"/>
				<ref bean="huaXiaConvert"/>
				<ref bean="cebConvert"/>
				<ref bean="cibConvert"/>
				<ref bean="citicConvert"/>
				<ref bean="pingAnConvert"/>
				<ref bean="spdConvert"/>
				<ref bean="beiJingConvert"/>
				<ref bean="bocommMasterCardConvert"/>
			</list>
		</property>
	</bean>
	
	<!-- http抓取及转发规则任务分发 begin -->
	<bean id="httpMailByqq" class="net.umpay.mailbill.service.impl.httpmail.HttpMailByqq"/>
	<bean id="httpMailByYeah" class="net.umpay.mailbill.service.impl.httpmail.HttpMailByYeah"/>
	<bean id="httpMailBy126" class="net.umpay.mailbill.service.impl.httpmail.HttpMailBy126"/>
	<bean id="httpMailBy139" class="net.umpay.mailbill.service.impl.httpmail.HttpMailBy139"/>
	<bean id="httpMailBy163" class="net.umpay.mailbill.service.impl.httpmail.HttpMailBy163"/>
	
	<bean id="httpMailFactory" class="net.umpay.mailbill.util.mail.httpmail.HttpMailFactory">	
		<property name="httpScanTypeList">
			<list>
				<ref bean="httpMailByqq"/>
				<ref bean="httpMailByYeah"/>
				<ref bean="httpMailBy126"/>
				<ref bean="httpMailBy139"/>
				<ref bean="httpMailBy163"/>
			</list>
		</property>
	</bean>
	<!-- mail forward -->
	<bean id="mail126Forward" class="net.umpay.mailbill.service.impl.httpmail.Mail126Forward"/>
	<bean id="mail163Forward" class="net.umpay.mailbill.service.impl.httpmail.Mail163Forward"/>
	<bean id="mailYeahForward" class="net.umpay.mailbill.service.impl.httpmail.MailYeahForward"/>
	<bean id="mail139Forward" class="net.umpay.mailbill.service.impl.httpmail.Mail139Forward"/>
	<bean id="mailForwardFactory" class="net.umpay.mailbill.util.mail.httpmail.MailForwardFactory">	
		<property name="httpForwardList">
			<list>
				<ref bean="mail126Forward"/>
				<ref bean="mail163Forward"/>
				<ref bean="mailYeahForward"/>
				<ref bean="mail139Forward"/>
			</list>
		</property>
	</bean>
	<!-- http抓取及转发规则任务分发 end -->
	
	<!-- 定时任务 -->
	<bean id="temporaryTableJob" class="net.umpay.mailbill.service.impl.job.FindNewMailImpl"></bean>
	<bean id="taskTableJob" class="net.umpay.mailbill.service.impl.job.GraspingNewMailImpl"></bean>
	<!-- 遍历临时表，直到读取到日账单信息后，删除这条记录，过期后还未读取到置为无效 
	<bean id="jobtaskDay"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="temporaryTableJob" />
		</property>
		<property name="targetMethod">
			<value>findDayNewMail</value>
		</property>
	</bean> -->
	<!-- <bean id="jobtaskDayTime" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="jobtaskDay" />
		</property>
		<property name="cronExpression">
			<value>0 10 10 * * ?</value>在每天的十点十分进行扫描日账单信息
			<value>0 0/30 * * * ?</value>在每天的十点十分进行扫描日账单信息
		</property>
	</bean>
	遍历临时表，直到读取到月账单信息后，删除这条记录，过期后还未读取到置为无效
	<bean id="jobtaskMonth"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="temporaryTableJob" />
		</property>
		<property name="targetMethod">
			<value>findMonthNewMail</value>
		</property>
	</bean>
	<bean id="jobtaskMonthTime" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="jobtaskMonth" />
		</property>
		<property name="cronExpression">
			<value>0 10 2 * * ?</value> 在每天的两点十分进行扫描信息
			<value>0 0/30 * * * ?</value> 在每天的两点十分进行扫描信息
		</property>
	</bean>
	去邮箱或邮箱服务器中抓取月账单邮件，若是未抓到邮件的入库临时表（记录未抓取到邮件的情况）的接口
	<bean id="saveMonthJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="taskTableJob" />
		</property>
		<property name="targetMethod">
			<value>saveBillJobTemp</value>
		</property>
	</bean>
	<bean id="saveMonthJobTime" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="saveMonthJob" />
		</property>
		<property name="cronExpression">
			<value>0 10 2 * * ?</value>在每天的两点十分进行扫描信息
			<value>0 0/30 * * * ?</value>在每天的两点十分进行扫描信息
		</property>
	</bean>
	去邮箱或邮箱服务器中抓取日账单邮件，若是未抓到邮件的入库临时表（记录未抓取到邮件的情况）的接口
	<bean id="saveDayJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="taskTableJob" />
		</property>
		<property name="targetMethod">
			<value>saveDayjob</value>
		</property>
	</bean>
	<bean id="saveDayJobTime" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="saveDayJob" />
		</property>
		<property name="cronExpression">
			<value>0 0 10 * * ?</value>在每天的十点十分进行扫描信息
			<value>0 0/30 * * * ?</value>在每天的十点十分进行扫描信息
		</property>
	</bean> -->
	<!-- 执行任务 
	<bean id="startQuertz"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="jobtaskDayTime" />
				<ref bean="jobtaskMonthTime" />
				<ref bean="saveMonthJobTime" />
				<ref bean="saveDayJobTime" />
			</list>
		</property>
	</bean>
	-->
</beans>